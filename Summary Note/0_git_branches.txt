[팀 프로젝트 관련 브랜치]
  - 참고 {
    1. main 브랜치 : 테스트를 거친후 병합하는 최종 브랜치
    2. 가맹관리_프로젝트_(버전) 브랜치 : 테스트를 진행하는 브랜치
    3. 김도하 브랜치 : 협업자가 작업하는 브랜치
    4. 박희만 브랜치 : 협업자가 작업하는 브랜치
    5. 송제영 브랜치 : 내가 작업하는 브랜치
    6. 최홍빈 브랜치 : 협업자가 작업하는 브랜치    
  }

  1. 터미널을 이용한 방법
    [가맹관리_프로젝트 브랜치 ---> 송제영 브랜치로 병합]
      (1) 송제영 브랜치로 이동
        : git checkout 송제영

      (2) 가맹관리_프로젝트 브랜치의 변경사항 병합
        : git merge 가맹관리_프로젝트.v1.0

      (3) 충돌 발생시 해결하고 변경사항 커밋
        - 충돌된 파일을 수정한 뒤
        : git add .
        : git commit - m "병합 충돌 해결 및 병합 완료"

    [송제영 브랜치 ---> 가맹관리_프로젝트 브랜치로 병합]
      (1) 가맹관리_프로젝트 브랜치로 이동
        : git checkout 가맹관리_프로젝트.v_1.0

      (2) 송제영 브랜치의 병경사항 병합
        : git merge 송제영

      (3) 충돌 해결 및 커밋
        - 충돌된 파일을 수정한 뒤
        : git add .
        : git commit - m "병합 충돌 해결 및 병합 완료"

  2. vscode를 이용한 방법
      (1) 브랜치 이동
        - 좌측 하단 브랜치 아이콘 클릭 -> 송제영 선택
    
      (2) 병합실행
        - Command Palette 열기(Cmd + Shift + P)
        - Git: Merge Branch 입력 -> 병합할 브랜치 선택(가맹관리_프로젝트.v_1.0)

      (3) 충돌 발생시 해결
        - vscode에서 충돌된 파일에 <<<<<, >>>>> 표시된 부분 수정
        - 수정 완료 후 변경사항 저장 및 Commit.

      이 과정을 송제영 브랜치 -> 가맹관리_프로젝트 브랜치에도 동일하게 진행!

  3. 추천방법 : 터미널 과 vscode 혼합방식 추천!
      (1) 터미널로 브랜치 이동과 병합 작업을 빠르게 처리
        : git checkout 송제영
        : git merge 가맹관리_프로젝트.v_1.0

      (2) 충돌이 발생한 경우 vscode를 활용하여 충돌해결.
        - vscode는 GUI로 충돌을 직관적으로 보여줘 효과적임
        - 수정 후 다시 터미널에서 커밋하면 됨
        : git add .
        : git commit -m "충돌 해결"

      Tip
        - 병합 전에 항상 브랜치를 최신 상태로 업데이트
        : git pull origin [브랜치 이름]


